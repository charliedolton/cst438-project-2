package com.example.springbootstarterthymeleaf;

import com.example.springbootstarterthymeleaf.database.User;
import com.example.springbootstarterthymeleaf.database.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

@Controller
@SpringBootApplication
public class SpringBootStarterThymeleafApplication {

	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;


	@RequestMapping("/")
	public String landingPage() {
		return "landingPage";
	}


	@RequestMapping("/signup")
	public String signup() {
		return "signup";
	}

	@PostMapping("/signup") // post method for signUp
	public String addUser(@RequestParam String username,
										@RequestParam String fName,
										@RequestParam String lName,
										@RequestParam String password) {// parameters that this post method expect

		User user = new User(username,fName,lName,"",password);

		if(userRepository.findByUsername(username) == null){
			userRepository.save(user);
			return "redirect:/login";
		}

		return "redirect:/signup";
	}

	@RequestMapping("/login")
	public String login(Model model) {
		return "login";
	}

	@PostMapping("/login")
	public String attemptLogin(@ModelAttribute("user") User user, Model model) {
		User dbUser = userRepository.findByUsername(user.getUsername());

		// user is not found in database
		if (dbUser == null) {
			model.addAttribute("error", "User does not exist!");
			return "login";
		}

		// input password does not match password in database
		if (!dbUser.getPassword().equals(user.getPassword())) {
			model.addAttribute("error", "Incorrect password!");
			return "login";
		}

		// TODO: allow for user to stay logged in using sessions
		return "navigation";
	}

	@GetMapping(path="api/userIsTaken")
	public @ResponseBody boolean checkForUser(String username) {//checks for user by username
		User user1 = userRepository.findByUsername(username);
		Boolean returnVal;
		if(user1 == null){
			returnVal = false;
		}
		else{
			returnVal = true;
		}
		return returnVal;
	}

	public static void main(String[] args) {
		SpringApplication.run(SpringBootStarterThymeleafApplication.class, args);
	}

}
